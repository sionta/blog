@charset "utf-8";

// Definition lists
dl {
  dt {
    font-weight: bold;
  }

  dd::before {
    margin-right: 5px;
    content: "\2192 \00a0";
  }
}

// Blockquote with <cite>
blockquote:has(cite) {
  cite::before {
    content: "\2014 \0020";
  }
}

// Horizontal rules
hr {
  border: 0;
  border-bottom: 2px solid var(--bd-1);
}

// Keyboards
kbd {
  background-color: var(--bg-2);
  color: var(--tx-1);
  padding: 2px 5px;
  border-radius: 3px;
  border-bottom: 3px solid var(--bd-1);
}

samp {
  background-color: inherit !important;
  color: var(--lk-1);
}

abbr {
  cursor: help;
}

mark,
::selection {
  padding: 2px;
  color: var(--black);
}

::selection {
  background-color: var(--lk-1);
}

mark {
  color: $base00;
  background-color: var(--yellow);
}

svg.icon-tabler {
  width: 22px;
  height: 22px;
  display: inline-block;
  vertical-align: middle;
}

.external-link svg {
  width: 16px;
  height: 16px;
  vertical-align: top;
}

// Fixed `- [x] Task list` from rendering markdown.
.task-list {
  margin-left: 0;
  list-style: none;

  &-item {
    &-checkbox {
      cursor: not-allowed;
      margin-right: 10px;
    }
  }
}

.toc-list {
  li {
    margin-top: 0.5rem;
  }

  a {
    color: var(--lk-1);
    text-decoration: none;

    &:hover {
      color: var(--lk-2);
    }
  }
}

.anchor-link {
  margin-left: calc(#{$spacing-unit} / 2);
  font-style: normal;
  font-weight: bold;
  color: var(--bd-1);
  text-decoration: none;

  &:hover {
    text-decoration: none;
    color: var(--lk-1);
  }
}

// Fixed multiple KaTeX output from rendering markdown.
.katex-html {
  display: none;
}

.mermaid {
  svg {
    // display: block;
    margin: 0 auto;
    align-items: center;
    // background-color: red;
  }
}

.emoji {
  height: $font-size;
  width: $font-size;
  display: inline-block;
}

// Alerts
@import url("../fonts/tabler-icons/tabler-icons.min.css");
$alert_data: (
  "note": (
    "color": #6a9fb5,
    "icon": "\ea05",
    "emoji": "\1F4DD",
  ),
  "tip": (
    "color": #90a959,
    "icon": "\ea51",
    "emoji": "\1F4A1",
  ),
  "important": (
    "color": #aa759f,
    "icon": "\ec9b",
    "emoji": "\2139",
  ),
  "warning": (
    "color": #d28445,
    "icon": "\ea06",
    "emoji": "\26A0",
  ),
  "caution": (
    "color": #ac4142,
    "icon": "\f810",
    "emoji": "\274C",
  ),
);

.alert {
  padding: $spacing-unit;
  margin: $spacing-unit auto;
  font: 400 #{$font-size}/#{$line-height} $font-sans;
}

@mixin alert-content($prefix, $color) {
  #{$prefix} {
    color: $color;
    display: inline-block;
    font-optical-sizing: auto;
    overflow: visible !important;
    vertical-align: text-bottom;
    margin-bottom: calc($spacing-unit / 2);
    @content;
  }
}

@each $name, $value in $alert_data {
  $color: map-get($value, "color");
  $icon: map-get($value, "icon");
  $emoji: map-get($value, "emoji");

  .alert-#{$name} {
    background-color: rgba($color, 0.2);
    border-left: 5px solid rgba($color, 0.65);
    color: var(--tx-1);

    // kbd,
    // code {
    //   // color: $color;
    //   // font-weight: bold;
    //   border: 1px solid rgba($color, 0.35);
    //   background-color: rgba($color, 0.15);
    // }
  }

  @include alert-content(".alert-#{$name}-icon:before", $color) {
    font: 400 #{22px}/#{1} "tabler-icons", $font-sans !important;
    content: "#{$icon}";
  }

  @include alert-content(".alert-#{$name}-emoji:before", $color) {
    font: 600 #{16px}/#{1} $font-emoji, $font-sans;
    content: "#{$emoji} #{to-upper-case($string: "#{$name}")}";
  }
}

// Fixed Gists skeleton override
// for more see https://github.com/primer/css/
div.gist {
  font-size: 0.875rem;
  color: var(--tx-1);
  text-align: left;
  direction: ltr;

  .highlight {
    padding: 0;
    margin: 0;
    font-family: $font-mono;
    font-size: small;
    font-weight: normal;
    line-height: 1.4;
    color: var(--tx-1);
    background: var(--bg-2);
    border: 0;
  }

  .render-viewer-error,
  .render-viewer-fatal,
  .render-viewer-invalid,
  .octospinner {
    display: none;
  }

  iframe.render-viewer {
    width: 100%;
    height: 480px;
    overflow: hidden;
    border: 0;
  }

  pre,
  code {
    font-family: $font-mono !important;
    white-space: pre;
  }

  .gist-meta {
    padding: 10px;
    overflow: hidden;
    font: 12px $font-sans, $font-emoji;
    color: var(--tx-1);
    background-color: var(--bg-2);
    border-radius: 0 0 $border-radius $border-radius;

    a {
      font-weight: bold;
      color: var(--tx-1);
      text-decoration: none;
      border: 0;
    }
  }

  .gist-data {
    overflow: auto;
    word-wrap: normal;
    background-color: var(--bg-3);

    border-bottom: 1px solid var(--bd-1);
    border-radius: $border-radius $border-radius 0 0;
  }

  .gist-file {
    margin-bottom: 1em;
    font-family: $font-mono;

    border: 1px solid var(--bd-1);

    border-bottom: 1px solid var(--bd-1);
    border-radius: $border-radius;

    /* Rendered content (e.g. markdown)*/
    article {
      padding: 6px;
    }

    .scroll {
      .gist-data {
        position: absolute;
        top: 0;
        right: 0;

        bottom: 30px;
        left: 0;
        overflow: scroll;
      }

      .gist-meta {
        position: absolute;
        right: 0;
        bottom: 0;
        left: 0;
      }
    }
  }

  .blob-num {
    border: inherit;
    font-size: inherit;
    font-family: $font-sans;
    min-width: inherit;

    padding: 1px 10px !important;

    background: rgba(0, 0, 0, 0);
  }

  .blob-code {
    vertical-align: inherit;
    font: 0.875rem $font-mono;
    padding: 1px 10px !important;
    text-align: left;

    background: rgba(0, 0, 0, 0);
    border: 0;
  }

  /* text selection*/
  .blob-code-inner {
    // font: inherit !important;
    &::selection,
    *::selection {
      background-color: var(--bg-3);
    }
  }

  .blob-wrapper {
    table {
      border-collapse: collapse;
    }

    tr:first-child td {
      padding-top: $spacing-unit;
    }
  }

  /* Needed for correct indentation of markdown headers in embedded gists.*/
  .markdown-body .anchor {
    display: none;
  }
}
