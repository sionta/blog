@charset "utf-8";

// Syntax highlighting styles should be adjusted appropriately for every theme
// List of tokens: https://github.com/rouge-ruby/rouge/wiki/List-of-tokens

.highlight {
  &,
  & pre,
  & &-rouge &,
  & pre code {
    font-family: $font-mono;
    letter-spacing: calc($line-height * 0.875);
    font-size: 0.875rem;
    border-radius: 3px;
    background: var(--bg-2);
    @extend %vertical-rhythm;
  }

  .rouge-table {
    &,
    td,
    pre {
      border: 0;
      margin: 0;
      padding: 0;
    }
    td {
      // line numbers
      &.gutter {
        &,
        &.gl {
          border-right: 1px solid var(--bd-1);
        }
        width: 0;
        padding-right: 16px;
        text-align: right;
      }

      &.code {
        padding-left: 16px;
      }
    }
  }
}

/* prettier-ignore */
.highlight {
  .w     { color: var(--syntax-string); } // Text.Whitespace
  .bp    { color: var(--blue); } // Name.Builtin.Pseudo
  .c     { color: var(--syntax-comment); font-style: italic; } // Comment
  .c1    { color: var(--syntax-comment); font-style: italic; } // Comment.Single
  .cm    { color: var(--syntax-comment); font-style: italic; } // Comment.Multiline
  .cp    { color: var(--syntax-comment); font-style: italic; } // Comment.Preproc
  .cs    { color: var(--syntax-comment); font-style: italic; } // Comment.Special
  .err   { color: var(--syntax-error); } // Error
  .gd    { color: var(--syntax-error); } // Generic.Deleted
  .gi    { color: var(--green); } // Generic.Inserted
  .g     { color: var(--syntax-string); } // Generic
  .ge    { font-style: italic; text-decoration: underline } // Generic.Emph
  .gh    { color: var(--syntax-string); } // Generic.Heading
  .gl    { color: var(--violet); } // Generic.Lineno
  .go    { color: var(--syntax-comment); } // Generic.Output
  .gp    { color: var(--brown); } // Generic.Prompt
  .gr    { color: var(--syntax-error); } // Generic.Error
  .gs    { font-weight: bold; } // Generic.Strong
  .gt    { color: var(--syntax-error); } // Generic.Traceback
  .gu    { color: var(--syntax-string); } // Generic.Subheading
  .il    { color: var(--orange); } // Literal.Number.Integer.Long
  .k     { color: var(--violet); font-weight: bold; } // Keyword
  .kc    { color: var(--violet); font-weight: bold; } // Keyword.Constant
  .kd    { color: var(--violet); font-weight: bold; } // Keyword.Declaration
  .kn    { color: var(--violet); font-weight: bold; } // Keyword.Namespace
  .kp    { color: var(--violet); font-weight: bold; } // Keyword.Pseudo
  .kr    { color: var(--violet); font-weight: bold; } // Keyword.Reserved
  .kt    { color: var(--violet); font-weight: bold; } // Keyword.Type
  .l     { color: var(--green); } // Literal
  .ld    { color: var(--green); } // Literal.Date
  .m     { color: var(--orange); } // Literal.Number
  .mb    { color: var(--orange); } // Literal.Number.Bin
  .mf    { color: var(--orange); } // Literal.Number.Float
  .mh    { color: var(--orange); } // Literal.Number.Hex
  .mi    { color: var(--orange); } // Literal.Number.Integer
  .mo    { color: var(--orange); } // Literal.Number.Oct
  .n     { color: var(--syntax-error); } // Name
  .na    { color: var(--yellow); } // Name.Attribute
  .nb    { color: var(--blue); } // Name.Builtin
  .nc    { color: var(--yellow); font-weight: bold; } // Name.Class
  .nd    { color: var(--yellow); } // Name.Decorator
  .ne    { color: var(--syntax-error); font-weight: bold; } // Name.Exception
  .nf    { color: var(--blue); } // Name.Function
  .ni    { color: var(--syntax-error); } // Name.Entity
  .nl    { color: var(--syntax-error); } // Name.Label
  .nn    { color: var(--syntax-error); } // Name.Namespace
  .no    { color: var(--orange); } // Name.Constant
  .nt    { color: var(--violet); } // Name.Tag
  .nv    { color: var(--orange); } // Name.Variable
  .nx    { color: var(--syntax-error); } // Name.Other
  .o     { color: var(--syntax-string); font-weight: bold; } // Operator
  .ow    { color: var(--syntax-string); font-weight: bold; } // Operator.Word
  .p     { color: var(--syntax-string); } // Punctuation
  .py    { color: var(--syntax-error); } // Name.Property
  .s     { color: var(--green); } // Literal.String
  .s1    { color: var(--green); } // Literal.String.Single
  .s2    { color: var(--green); } // Literal.String.Double
  .sb    { color: var(--green); } // Literal.String.Backtick
  .sc    { color: var(--green); } // Literal.String.Char
  .sd    { color: var(--green); } // Literal.String.Doc
  .se    { color: var(--cyan); } // Literal.String.Escape
  .sh    { color: var(--green); } // Literal.String.Heredoc
  .si    { color: var(--green); } // Literal.String.Interpol
  .sr    { color: var(--cyan); } // Literal.String.Regex
  .ss    { color: var(--green); } // Literal.String.Symbol
  .sx    { color: var(--green); } // Literal.String.Other
  .vc    { color: var(--orange); } // Name.Variable.Class
  .vg    { color: var(--orange); } // Name.Variable.Global
  .vi    { color: var(--orange); } // Name.Variable.Instance
  .x     { color: var(--brown); } // Other
}
