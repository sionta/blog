.site-title {
  a {
    color: inherit;
    text-decoration: none;
    &:hover {
      color: var(--hover-color);
      text-decoration: underline;
    }
  }
}

.post-list {
  display: flex;
  flex-direction: column;
  // padding: 20px;
  // max-width: 800px;
  // margin: 0 auto;
  .post-item {
    background-color: var(--background-alt);
    border: 1px solid var(--border-color);
    transition: background-color 0.2s;
    border-radius: 8px;
    margin-bottom: 20px;
    padding: 15px;
    &:hover {
      background-color: var(--background);
    }
  }
  .post-title {
    margin: 0;
    font-size: 1.4rem;
    color: var(--link-color);
  }
  .post-link {
    text-decoration: none;
    color: inherit;
  }
  .post-summary {
    font-size: 0.9rem;
    margin: 10px 0;
    color: var(--text-color);
  }
  .post-meta {
    display: flex;
    justify-content: space-between;
    /* color: var(--second-color); */
    font-size: 0.9rem;
  }
}

.alert {
  display: flex;
  font-size: 1rem;
  border-radius: 5px;
  align-items: center;
  gap: 10px;
  &.info {
    background-color: var(--alert-info-bg);
    color: var(--alert-info-color);
    &::before {
      content: "ℹ️";
    }
  }
  &.warning {
    background-color: var(--alert-warning-bg);
    color: var(--alert-warning-color);
    &::before {
      content: "⚠️";
    }
  }
  &.danger {
    background-color: var(--alert-danger-bg);
    color: var(--alert-danger-color);
    &::before {
      content: "❌";
    }
  }
  &.success {
    background-color: var(--alert-success-bg);
    color: var(--alert-success-color);
    &::before {
      content: "✅";
    }
  }
}

// Syntax highlighting styles should be adjusted appropriately for every color scheme
// List of tokens: https://github.com/rouge-ruby/rouge/wiki/List-of-tokens
.highlight {
  font-family: var(--mono-fonts);
  table {
    td {
      padding: 5px;
    }
    pre {
      margin: 0;
    }
  }
  .c,
  .c1,
  .cm,
  .cs,
  .ge,
  .err {
    font-style: italic;
  }
  .cp,
  .cs,
  .gs,
  .k,
  .kc,
  .kd,
  .kp,
  .kr,
  .kt,
  .nc,
  .ne,
  .nf,
  .o,
  .ow {
    font-weight: bold;
  }
  .bp {
    color: #999999;
  } // Name.Builtin.Pseudo
  .c {
    color: #999999;
  } // Comment
  .c1 {
    color: #999999;
  } // Comment.Single
  .cm {
    color: #999999;
  } // Comment.Multiline
  .cp {
    color: #999999;
  } // Comment.Preproc
  .cs {
    color: #999999;
  } // Comment.Special
  .err {
    color: #a61717;
    background-color: #e3d2d2;
  } // Error
  .gd {
    color: #000000;
    background-color: #ffdddd;
  } // Generic.Deleted
  .gd .x {
    color: #000000;
    background-color: #ffaaaa;
  } // Generic.Deleted.Specific
  .gi {
    color: #000000;
    background-color: #ddffdd;
  } // Generic.Inserted
  .gi .x {
    color: #000000;
    background-color: #aaffaa;
  } // Generic.Inserted.Specific
  .gh {
    color: #999999;
  } // Generic.Heading
  .go {
    color: #888888;
  } // Generic.Output
  .gp {
    color: #555555;
  } // Generic.Prompt
  .gr {
    color: #aa0000;
  } // Generic.Error
  .gt {
    color: #a00000;
  } // Generic.Traceback
  .gu {
    color: #aaaaaa;
  } // Generic.Subheading
  .il {
    color: #009999;
  } // Literal.Number.Integer.Long
  .kt {
    color: #445588;
  } // Keyword.Type
  .m {
    color: #009999;
  } // Literal.Number
  .mf {
    color: #009999;
  } // Literal.Number.Float
  .mh {
    color: #009999;
  } // Literal.Number.Hex
  .mi {
    color: #009999;
  } // Literal.Number.Integer
  .mo {
    color: #009999;
  } // Literal.Number.Oct
  .na {
    color: #008080;
  } // Name.Attribute
  .nb {
    color: #0086b3;
  } // Name.Builtin
  .nc {
    color: #445588;
  } // Name.Class
  .ne {
    color: #990000;
  } // Name.Exception
  .nf {
    color: #990000;
  } // Name.Function
  .ni {
    color: #800080;
  } // Name.Entity
  .nn {
    color: #555555;
  } // Name.Namespace
  .no {
    color: #008080;
  } // Name.Constant
  .nt {
    color: #000080;
  } // Name.Tag
  .nv {
    color: #008080;
  } // Name.Variable
  .s {
    color: #dd1144;
  } // Literal.String
  .s1 {
    color: #dd1144;
  } // Literal.String.Single
  .s2 {
    color: #dd1144;
  } // Literal.String.Double
  .sb {
    color: #dd1144;
  } // Literal.String.Backtick
  .sc {
    color: #dd1144;
  } // Literal.String.Char
  .sd {
    color: #dd1144;
  } // Literal.String.Doc
  .se {
    color: #dd1144;
  } // Literal.String.Escape
  .sh {
    color: #dd1144;
  } // Literal.String.Heredoc
  .si {
    color: #dd1144;
  } // Literal.String.Interpol
  .sr {
    color: #009926;
  } // Literal.String.Regex
  .ss {
    color: #990073;
  } // Literal.String.Symbol
  .sx {
    color: #dd1144;
  } // Literal.String.Other
  .vc {
    color: #008080;
  } // Name.Variable.Class
  .vg {
    color: #008080;
  } // Name.Variable.Global
  .vi {
    color: #008080;
  } // Name.Variable.Instance
  .w {
    color: #bbbbbb;
  } // Text.Whitespace
}

[data-theme="dark"] {
  .highlight {
    // .bp,
    // .c,
    // .c1,
    // .cm,
    // .cp,
    // .cs {
    //   color: #545454;
    // }
    .gr,
    .gt,
    .err {
      color: #f07178;
      background-color: #545454;
    }
    .k {
      color: #89ddff;
    }
    .nf {
      color: #82aaff;
    }
    .il,
    .m,
    .mf,
    .mh,
    .mi,
    .mo {
      color: #f78c6c;
    }
    .nc,
    .nt,
    .vc,
    .kt {
      color: #ffcb6b;
    }
    .s,
    .s1,
    .s2,
    .sb,
    .sc,
    .sd,
    .sh,
    .si,
    .sr,
    .ss,
    .sx {
      color: #c3e88d;
    }
    .nb,
    .nv,
    .se,
    .vg,
    .vi,
    .w {
      color: #eeffff;
    }
  }
}

// Theme toggles: https://github.com/AlfieJones/theme-toggles
.theme-toggle {
  --theme-toggle-duration: 600ms;
  background: none;
  border: none;
  bottom: 32px;
  color: var(--text-color);
  position: fixed;
  right: 42px;
  z-index: 1000;
  cursor: pointer;
  input[type="checkbox"] {
    display: none;
  }
}
.theme-toggle_expand g circle,
.theme-toggle_expand g path {
  transform-origin: center;
  transition: transform calc(var(--theme-toggle-duration) * 0.65)
    cubic-bezier(0, 0, 0, 1.25) calc(var(--theme-toggle-duration) * 0.35);
}
.theme-toggle_expand :first-child path {
  transition-property: transform, d;
  transition-duration: calc(var(--theme-toggle-duration) * 0.6);
  transition-timing-function: cubic-bezier(0, 0, 0.5, 1);
}
.theme-toggle_toggled:not(label).theme-toggle .theme-toggle_expand g circle,
.theme-toggle input[type="checkbox"]:checked ~ .theme-toggle_expand g circle {
  transform: scale(1.4);
  transition-delay: 0s;
}
.theme-toggle_toggled:not(label).theme-toggle .theme-toggle_expand g path,
.theme-toggle input[type="checkbox"]:checked ~ .theme-toggle_expand g path {
  transform: scale(0.75);
  transition-delay: 0s;
}
.theme-toggle_toggled:not(label).theme-toggle
  .theme-toggle_expand
  :first-child
  path,
.theme-toggle
  input[type="checkbox"]:checked
  ~ .theme-toggle_expand
  :first-child
  path {
  d: path("M-9 3h25a1 1 0 0017 13v30H0Z");
  transition-delay: calc(var(--theme-toggle-duration) * 0.4);
  transition-timing-function: cubic-bezier(0, 0, 0, 1.25);
}
@supports not (d: path("")) {
  .theme-toggle_toggled:not(label).theme-toggle
    .theme-toggle_expand
    :first-child
    path,
  .theme-toggle
    input[type="checkbox"]:checked
    ~ .theme-toggle_expand
    :first-child
    path {
    transform: translate3d(-9px, 14px, 0);
  }
}
@media (prefers-reduced-motion: reduce) {
  .theme-toggle:not(.theme-toggle--force-motion) * {
    transition: none !important;
  }
}
